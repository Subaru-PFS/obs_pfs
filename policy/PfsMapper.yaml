needCalibRegistry: true

camera:  ../pfs/camera
defects: ../pfs/defects

skytiles:
  resolutionPix: 700
  paddingArcsec: 10.0

levels:
  skyTile:
  - visit
  - ccd
  tract: patch
  visit: ccd
  sensor: none

defaultLevel: sensor

defaultSubLevels:
  skyTile: sensor
  visit: sensor
  sensor: none

# exposures and datasets which are needed for all of the mappers are defined
# in the obs_base package (in either exposures.yaml or datasets.yaml).
# Where a modification to such a dataset is required for a particular camera,
# (e.g., for a template or specialized python type), the modification will
# appear below as a partial dataset definition.

exposures:
  raw:
    template: '%(dateObs)s/PF%(site)s%(category)s%(visit)06d%(arm)s%(spectrograph)1d.fits'
  rawb:
    description: "A single ramp or reference image directly from the H4RG's data acquisition system."
    persistable: DecoratedImageF
    storage: FitsStorage
    python: lsst.afw.image.DecoratedImageF
    level: Ccd
    tables: raw
    template: '%(dateObs)s/PF%(site)sB%(visit)06d%(arm)s%(spectrograph)1d.fits[%(hdu)s]'
  postISRCCD:
    template: 'postIsrCcd/%(dateObs)s/v%(visit)06d/postIsrCcd-%(site)s%(category)s%(visit)06d%(arm)s%(spectrograph)1d.fits'
#    recipe: noCompression
  calexp:
    template: 'calExp/%(dateObs)s/v%(visit)06d/calExp-%(site)s%(category)s%(visit)06d%(arm)s%(spectrograph)1d.fits'

  subtracted:
    template: 'subtracted/%(dateObs)s/v%(visit)06d/subtracted-%(site)s%(category)s%(visit)06d%(arm)s%(spectrograph)1d.fits'
    persistable: ExposureF
    storage: FitsStorage
    python: lsst.afw.image.ExposureF
    level: Ccd
    tables: raw

  guider:
    description: "A raw autoguider image."
    template: '%(dateObs)s/PF%(site)s%(category)s%(visit)06d%(sequence)02d.fits[%(hdu)d]'
    persistable: DecoratedImageU
    storage: FitsStorage
    python: lsst.afw.image.DecoratedImageU
    level: Ccd
    tables: raw


calibrations:
  defects:
    columns:
    - ccd
    - taiObs
    level: Ccd
    persistable: DefectsList
    python: lsst.ip.isr.Defects
    refCols:
    - visit
    - arm
    - spectrograph
    reference: raw
    storage: FitsStorage
    tables: defects
    template: defects/%(calibDate)s/defects-%(calibDate)s-%(ccd)02d.fits
    validEndName: validEnd
    validRange: true
    validStartName: validStart
  bias:
    template: 'BIAS/pfsBias-%(calibDate)s-%(visit0)06d-%(arm)s%(spectrograph)1d.fits'
    python: lsst.afw.image.DecoratedImageF
    persistable: DecoratedImageF
    storage: FitsStorage
    level: Ccd
    tables: bias
    columns:
    - arm
    - spectrograph
    - taiObs
    reference: raw
    refCols:
    - visit
    - arm
    - spectrograph
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  dark:
    template: 'DARK/pfsDark-%(calibDate)s-%(visit0)06d-%(arm)s%(spectrograph)1d.fits'
    python: lsst.afw.image.DecoratedImageF
    persistable: DecoratedImageF
    storage: FitsStorage
    level: Ccd
    tables: dark
    columns:
    - arm
    - spectrograph
    - taiObs
    reference: raw
    refCols:
    - visit
    - arm
    - spectrograph
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  flat:
    template: 'FLAT/pfsFlat-%(calibDate)s-%(visit0)06d-%(arm)s%(spectrograph)1d.fits'
    python: lsst.afw.image.ExposureF
    persistable: ExposureF
    storage: FitsStorage
    level: Ccd
    tables: flat
    columns:
    - arm
    - spectrograph
    - taiObs
    reference: raw
    refCols:
    - visit
    - arm
    - spectrograph
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  fiberProfiles:
    template: 'FIBERPROFILES/pfsFiberProfiles-%(calibDate)s-%(visit0)06d-%(arm)s%(spectrograph)1d.fits'
    python: pfs.drp.stella.FiberProfileSet
    persistable: FiberProfileSet
    storage: FitsCatalogStorage
    level: Ccd
    tables: fiberProfiles
    columns:
    - arm
    - spectrograph
    - taiObs
    reference: raw
    refCols:
    - visit
    - arm
    - spectrograph
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  detectorMap:
    template: 'DETECTORMAP/pfsDetectorMap-%(visit0)06d-%(arm)s%(spectrograph)1d.fits'
    python: pfs.drp.stella.DetectorMap
    persistable: DetectorMap
    storage: FitsCatalogStorage
    level: Ccd
    tables: detectorMap
    columns:
    - arm
    - spectrograph
    - taiObs
    reference: raw
    refCols:
    - visit
    - arm
    - spectrograph
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  ipc:
    template: 'IPC/pfsIpc-%(calibDate)s-%(visit0)06d-%(arm)s%(spectrograph)1d.fits'
    python: lsst.afw.image.DecoratedImageF
    persistable: DecoratedImageF
    storage: FitsStorage
    level: Ccd
    tables: ipc
    columns:
    - arm
    - spectrograph
    - taiObs
    reference: raw
    refCols:
    - visit
    - arm
    - spectrograph
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  bias_camera:
    template: 'BIAS-overview/pfsBiasOverview-%(calibDate)s-%(visit0)06d.fits'
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    level: None
  dark_camera:
    template: 'DARK-overview/pfsDarkOverview-%(calibDate)s-%(visit0)06d.fits'
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    level: None
  flat_camera:
    template: 'FLAT-overview/pfsFlatOverview-%(calibDate)s-%(visit0)06d.fits'
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    level: None


datasets:

  pfsArm:
    template: 'pfsArm/%(dateObs)s/v%(visit)06d/pfsArm-%(visit)06d-%(arm)s%(spectrograph)d.fits'
    python: pfs.drp.stella.PfsArm
    persistable: PfsArm
    storage: FitsCatalogStorage
    level: Ccd
    tables:
    - raw

  pfsMerged:
    template: 'pfsMerged/%(dateObs)s/v%(visit)06d/pfsMerged-%(visit)06d.fits'
    python: pfs.drp.stella.PfsMerged
    persistable: PfsMerged
    storage: FitsCatalogStorage
    level: Visit
    tables:
    - raw

  pfsConfig:
    # N.b. template is overridden by datamodel
    template: 'pfsConfig/%(dateObs)s/pfsConfig-0x%(pfsDesignId)016x-%(visit)06d.fits'
    python: pfs.drp.stella.PfsConfig
    persistable: PfsConfig
    storage: FitsCatalogStorage
    tables:
    - raw

  detectorMap_used:  # DetectorMap used in processing the data (adjusted from original calib)
    template: 'DETECTORMAP/pfsDetectorMap-%(visit)06d-%(arm)s%(spectrograph)1d.fits'
    python: pfs.drp.stella.DetectorMap
    persistable: DetectorMap
    storage: FitsCatalogStorage
    tables:
    - raw

  sky1d:
    template: 'sky1d/%(dateObs)s/v%(visit)07d/sky1d-%(visit)06d-%(arm)s%(spectrograph)d.fits'
    python: pfs.drp.stella.focalPlaneFunction.FocalPlaneFunction
    persistable: FocalPlaneFunction
    storage: FitsCatalogStorage
    tables:
    - raw

  sky2d:
    template: 'pfsSky/%(dateObs)s/v%(visit)06d/pfsSky-%(visit)06d-%(arm)s%(spectrograph)d.fits'
    python: pfs.drp.stella.subtractSky2d.SkyModel
    persistable: SkyModel
    storage: FitsCatalogStorage
    tables:
    - raw

  apCorr:
    template: 'apCorr/%(dateObs)s/v%(visit)06d/apCorr-%(visit)06d-%(arm)s%(spectrograph)d.fits'
    python: pfs.drp.stella.focalPlaneFunction.FocalPlaneFunction
    persistable: FocalPlaneFunction
    storage: FitsCatalogStorage
    tables:
    - raw

  pfsReference:
    template: 'pfsReference/%(catId)05d/%(tract)05d/pfsReference-%(catId)05d-%(tract)05d-%(patch)s-%(objId)08x.fits'
    python: pfs.drp.stella.PfsReference
    persistable: PfsReference
    storage: FitsCatalogStorage
    level: Visit
    tables:
    - raw

  pfsFluxReference:
    template: 'pfsFluxReference/%(dateObs)s/v%(visit)06d/pfsFluxReference-%(visit)06d.fits'
    python: pfs.datamodel.pfsFluxReference.PfsFluxReference
    persistable: PfsFluxReference
    storage: FitsCatalogStorage
    level: Visit
    tables:
    - raw

  fluxCal:
    template: 'fluxCal/%(dateObs)s/v%(visit)06d/fluxCal-%(visit)06d.fits'
    python: pfs.drp.stella.focalPlaneFunction.FocalPlaneFunction
    persistable: FocalPlaneFunction
    storage: FitsCatalogStorage
    level: Visit
    tables:
    - raw

  pfsSingle:
    template: 'pfsSingle/%(catId)05d/%(tract)05d/%(patch)s/pfsSingle-%(catId)05d-%(tract)05d-%(patch)s-%(objId)016x-%(visit)06d.fits'
    python: pfs.drp.stella.PfsSingle
    persistable: PfsSingle
    storage: FitsCatalogStorage
    level: Visit
    tables:
    - raw

  pfsObject:
    template: 'pfsObject/%(catId)05d/%(tract)05d/%(patch)s/pfsObject-%(catId)05d-%(tract)05d-%(patch)s-%(objId)016x-%(nVisit)03d-0x%(pfsVisitHash)016x.fits'
    python: pfs.drp.stella.PfsObject
    persistable: PfsObject
    storage: FitsCatalogStorage
    level: Visit
    tables:
    - raw

  wlFitData:  # Deprecated in PIPE2D-358, August 2020
    template: 'wlFitData/%(dateObs)s/v%(visit)06d/wlFitData-%(visit)06d-%(arm)s%(spectrograph)d.fits'
    python: pfs.drp.stella.calibrateWavelengthsTask.WavelengthFitData
    persistable: WavelengthFitData
    storage: FitsCatalogStorage
    level: Visit
    tables:
    - raw

  arcLines:
    template: 'arcLines/%(dateObs)s/v%(visit)06d/arcLines-%(visit)06d-%(arm)s%(spectrograph)d.fits'
    python: pfs.drp.stella.arcLine.ArcLineSet
    persistable: ArcLineSet
    storage: FitsCatalogStorage
    level: Ccd
    tables:
    - raw

  background:
    template: 'background/%(dateObs)s/v%(visit)06d/background-%(visit)06d-%(arm)s%(spectrograph)d.pickle'
    python: object
    persistable: ignored
    storage: PickleStorage
    level: Ccd
    tables:
    - raw

  extQaStats:
    template: 'extQaStats/%(dateObs)s/v%(visit)06d/extQaStats-%(visit)06d-%(arm)s%(spectrograph)d.pdf'
    python: object
    persistable: ignored
    storage: MatplotlibStorage
    level: Ccd
    tables:
    - raw

  extQaImage:
    template: 'extQaImage/%(dateObs)s/v%(visit)06d/extQaImage-%(visit)06d-%(arm)s%(spectrograph)d.pdf'
    python: object
    persistable: ignored
    storage: MatplotlibStorage
    level: Ccd
    tables:
    - raw

  extQaImage_pickle:
    template: 'extQaImage/%(dateObs)s/v%(visit)06d/extQaImage-%(visit)06d-%(arm)s%(spectrograph)d.pickle'
    python: dict
    persistable: ignored
    storage: PickleStorage
    level: Ccd
    tables:
    - raw

  pfsArmLsf:
    template: 'pfsArm/%(dateObs)s/v%(visit)06d/pfsArmLsf-%(visit)06d-%(arm)s%(spectrograph)d.pickle'
    python: dict
    persistable: ignored
    storage: PickleStorage
    level: Ccd
    tables:
    - raw

  pfsMergedLsf:
    template: 'pfsMerged/%(dateObs)s/v%(visit)06d/pfsMergedLsf-%(visit)06d.pickle'
    python: dict
    persistable: ignored
    storage: PickleStorage
    level: Visit
    tables:
    - raw

  pfsSingleLsf:
    template: 'pfsSingle/%(catId)05d/%(tract)05d/%(patch)s/pfsSingleLsf-%(catId)05d-%(tract)05d-%(patch)s-%(objId)016x-%(visit)06d.pickle'
    python: dict
    persistable: ignored
    storage: PickleStorage
    level: Visit
    tables:
    - raw

  pfsObjectLsf:
    template: 'pfsObject/%(catId)05d/%(tract)05d/%(patch)s/pfsObjectLsf-%(catId)05d-%(tract)05d-%(patch)s-%(objId)016x-%(nVisit)03d-0x%(pfsVisitHash)016x.pickle'
    python: dict
    persistable: ignored
    storage: PickleStorage
    level: Visit
    tables:
    - raw


  fiberFlat_config:
    template: config/fiberFlat.py
    python: pfs.drp.stella.constructFiberFlatTask.ConstructFiberFlatConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  fiberProfiles_config:
    template: config/fiberProfiles.py
    python: pfs.drp.stella.constructFiberProfilesTask.ConstructFiberProfilesConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  reduceArc_config:
    template: config/reduceArc.py
    python: pfs.drp.stella.reduceArc.ReduceArcConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  reduceExposure_config:
    template: config/reduceExposure.py
    python: pfs.drp.stella.reduceExposure.ReduceExposureConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  mergeArms_config:
    template: config/mergeArms.py
    python: pfs.drp.stella.mergeArms.MergeArmsConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  calculateReferenceFlux_config:
    template: config/calculateReferenceFlux.py
    python: pfs.drp.stella.calculateReferenceFlux.CalculateReferenceFluxConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  fitPfsFluxReference_config:
    template: config/fitPfsFluxReference.py
    python: pfs.drp.stella.fitPfsFluxReference.FitPfsFluxReferenceConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  fluxCalibrate_config:
    template: config/fluxCalibrate.py
    python: pfs.drp.stella.fluxCalibrate.FluxCalibrateConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  fitFluxCal_config:
    template: config/fitFluxCal.py
    python: pfs.drp.stella.fitFluxCal.FitFluxCalConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  coaddSpectra_config:
    template: config/coaddSpectra.py
    python: pfs.drp.stella.coaddSpectra.CoaddSpectraConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  bootstrap_config:
    template: config/bootstrap.py
    python: pfs.drp.stella.bootstrap.BootstrapConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw

  extractionQa_config:
    template: config/extractionQa.py
    python: pfs.drp.qa.extractionQa.ExtractionQaConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
