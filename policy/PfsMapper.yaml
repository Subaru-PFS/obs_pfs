needCalibRegistry: true

camera:  ../pfs/camera
defects: ../pfs/defects

skytiles:
  resolutionPix: 700
  paddingArcsec: 10.0

levels:
  skyTile:
  - visit
  - ccd
  tract: patch
  visit: ccd
  sensor: none

defaultLevel: sensor

defaultSubLevels:
  skyTile: sensor
  visit: sensor
  sensor: none

# exposures and datasets which are needed for all of the mappers are defined
# in the obs_base package (in either exposures.yaml or datasets.yaml).
# Where a modification to such a dataset is required for a particular camera,
# (e.g., for a template or specialized python type), the modification will
# appear below as a partial dataset definition.

exposures:
  raw:
    template: '%(dateObs)s/PF%(site)s%(category)s%(visit)06d%(arm)s%(spectrograph)1d.fits'
  postISRCCD:
    template: 'postIsrCcd/%(dateObs)s/v%(visit)07d/postIsrCcd-%(site)s%(category)s%(visit)06d%(arm)s%(spectrograph)1d.fits'
  calexp:
    template: 'calExp/%(dateObs)s/v%(visit)07d/calExp-%(site)s%(category)s%(visit)06d%(arm)s%(spectrograph)1d.fits'

calibrations:
  bias:
    template: 'BIAS/pfsBias-%(calibDate)s-0-%(arm)s%(spectrograph)1d.fits'
    python: lsst.afw.image.DecoratedImageF
    persistable: DecoratedImageF
    storage: FitsStorage
    level: Ccd
    tables: bias
    columns: taiObs
    reference: raw_visit
    refCols: visit
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  dark:
    template: 'DARK/pfsDark-%(calibDate)s-0-%(arm)s%(spectrograph)1d.fits'
    python: lsst.afw.image.DecoratedImageF
    persistable: DecoratedImageF
    storage: FitsStorage
    level: Ccd
    tables: dark
    columns: taiObs
    reference: raw_visit
    refCols: visit
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  flat:
    template: 'FLAT/pfsFiberFlat-%(calibDate)s-%(visit0)06d-%(arm)s%(spectrograph)1d.fits'
    python: lsst.afw.image.ExposureF
    persistable: ExposureF
    storage: FitsStorage
    level: Ccd
    tables: flat
    columns: taiObs
    reference: raw_visit
    refCols: visit
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  fibertrace:
    template: 'FIBERTRACE/pfsFiberTrace-%(calibDate)s-%(visit0)06d-%(arm)s%(spectrograph)1d.fits'
    python: pfs.drp.stella.FiberTraceSet
    persistable: FiberTraceSet
    storage: FitsCatalogStorage
    level: Ccd
    tables: fiberTrace
    columns: taiObs
    reference: raw_visit
    refCols: visit
    validRange: true
    validStartName: validStart
    validEndName: validEnd
  detectormap:
    template: 'DETECTORMAP/pfsDetectorMap-%(visit0)06d-%(arm)s%(spectrograph)1d.fits'
    python: pfs.drp.stella.DetectorMap
    persistable: DetectorMap
    storage: FitsCatalogStorage
    level: Ccd
    tables: detectorMap
    columns: taiObs
    reference: raw_visit
    refCols: visit
    validRange: true
    validStartName: validStart
    validEndName: validEnd


datasets:

  pfsArm:
    composite:
      spectra:
        datasetType: spectra
      pfsConfig:
        inputOnly: true
        datasetType: pfsConfig
    assembler: lsst.obs.pfs.pfsMapper.assemble_pfsArm
    disassembler: lsst.obs.pfs.pfsMapper.disassemble_pfsArm

  pfsConfig:
    template: 'pfsState/%(dateObs)s/pfsConfig-0x%(pfsConfigId)016x.fits'  # N.b. overridden by datamodel
    python: pfs.drp.stella.PfsConfigIO
    persistable: PfsConfigIO
    storage: FitsCatalogStorage
    tables:
    - raw
    - raw_visit

  spectra:
    template: 'pfsArm/%(dateObs)s/v%(visit)07d/pfsArm-%(visit)06d-%(arm)s%(spectrograph)d.fits'
    python: pfs.drp.stella.SpectrumSet
    persistable: SpectrumSet
    storage: FitsCatalogStorage
    level: Ccd
    tables:
    - raw
    - raw_visit

  arc_config:
    template: config/arc.py
    python: lsst.obs.pfs.constructArc.ConstructArcConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit

  reduceArc_config:
    template: config/reduceArc.py
    python: pfs.drp.stella.reduceArcTask.ReduceArcConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit

  reduceArcRefSpecTask_config:
    template: config/reduceArcRefSpec.py
    python: pfs.drp.stella.reduceArcRefSpecTask.ReduceArcRefSpecConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit

  flat_config:
    template: config/flat.py
    python: lsst.obs.pfs.detrends.PfsFlatCombineConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit

  createRefSpecTask_config:
    template: config/createRefSpec.py
    python: pfs.drp.stella.createRefSpec.CreateRefSpecConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit

  createDetGeomTask_config:
    template: config/createDetGeom.py
    python: pfs.drp.stella.createDetGeom.CreateDetGeomConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit

  fiberTrace_config:
    template: config/fiberTrace.py
    python: pfs.drp.stella.constructFiberTraceTask.ConstructFiberTraceConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit

  fiberFlat_config:
    template: config/fiberFlat.py
    python: pfs.drp.stella.constructFiberFlatTask.ConstructFiberFlatConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit

  findAndTrace_config:
    template: config/findAndTraceApertures.py
    python: pfs.drp.stella.findAndTraceAperturesTask.FindAndTraceAperturesConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit

  createFlatFiberTraceProfile_config:
    template: config/createFlatFiberTraceProfile.py
    python: pfs.drp.stella.createFlatFiberTraceProfileTask.CreateFlatFiberTraceProfileConfig
    persistable: Config
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit
