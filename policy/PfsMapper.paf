#<?cfg paf policy ?>

needCalibRegistry: true

camera:        "../pfs/camera"
defects:    "../pfs/defects"

skytiles: {
    resolutionPix: 700    # Resolution for skytiles: 700 --> 500 arcsec sides
    paddingArcsec: 10.0   # Overlap between skytiles
}

levels: {
    # Keys that are NOT relevant for a particular level
    skyTile: "visit" "ccd"
    tract: "patch"
    visit: "ccd"
    sensor: "none"
}
defaultLevel: "sensor"
defaultSubLevels: {
    # Default sublevel for dataRef.subItems()
    skyTile: "sensor"
    visit: "sensor"
    sensor: "none"
}

exposures: {
    raw: {
        template:    "%(dateObs)s/PF%(site)s%(category)s%(visit)06d%(arm)s%(spectrograph)1d.fits"
        python:     "lsst.afw.image.DecoratedImageU"
        persistable:         "DecoratedImageU"
        storage:     "FitsStorage"
        level:        "Ccd"
        tables:        "raw"
        tables:        "raw_visit"
    }
    postISRCCD: {
        template:    "postISRCCD/%(dateObs)s/v%(visit)07d/PF%(site)s%(category)s%(arm)s%(spectrograph)1d.fits"
        python:        "lsst.afw.image.ExposureF"
        persistable:        "ExposureF"
        storage:    "FitsStorage"
        level:        "Ccd"
        tables:        "raw"
        tables:        "raw_visit"
    }
    calexp: {
        template:    "calExp/%(dateObs)s/v%(visit)07d/PF%(site)s%(category)s%(arm)s%(spectrograph)1d.fits"
        python:        "lsst.afw.image.ExposureF"
        persistable:        "ExposureF"
        storage:    "FitsStorage"
        level:        "Ccd"
        tables:        "raw"
        tables:        "raw_visit"
    }
    spArm: {
        template:      "spArm/%(dateObs)s/v%(visit)07d/pfsArm-%(visit)06d-%(spectrograph)d%(arm)s.fits"
        python:        "pfs.drp.stella.SpectrumSetF"
        persistable:   "SpectrumSet"
        storage:       "FitsCatalogStorage"
        tables:        "raw"
        tables:        "raw_visit"
    }

}

calibrations: {
    bias: {
        template:    "BIAS/NONE/%(calibVersion)s/pfsBias-%(calibDate)s-0-%(spectrograph)1d%(arm)s.fits"
        python:      "lsst.afw.image.ImageF"
        persistable: "ImageF"
        storage:     "FitsStorage"
        level:       "Ccd"
        tables:      "bias"
        columns:     "ccd"
        columns:     "taiObs"
        reference:   "raw_visit"
        refCols:     "visit"
        validRange:  true
        validStartName: validStart
        validEndName: validEnd
    }
    dark: {
        template:    "DARK/NONE/%(calibVersion)s/pfsDark-%(calibDate)s-0-%(spectrograph)1d%(arm)s.fits"
        python:      "lsst.afw.image.ImageF"
        persistable: "ImageF"
        storage:     "FitsStorage"
        level:       "Ccd"
        tables:      "dark"
        columns:     "ccd"
        columns:     "taiObs"
        reference:   "raw_visit"
        refCols:     "visit"
        validRange:  true
        validStartName: validStart
        validEndName: validEnd
    }
    flat: {
        template:    "FLAT/%(filter)s/%(calibVersion)s/pfsFlat-%(calibDate)s-0-%(spectrograph)1d%(arm)s.fits"
        python:      "lsst.afw.image.MaskedImageF"
        persistable: "MaskedImageF"
        storage:     "FitsStorage"
        level:       "Ccd"
        tables:      "flat"
        columns:     "ccd"
        columns:     "taiObs"
        reference:   "raw_visit"
        refCols:     "visit"
        validRange:  true
        validStartName: validStart
        validEndName: validEnd
    }
    arc: {
        template:    "ARC/%(filter)s/%(calibVersion)s/pfsArc-%(calibDate)s-0-%(spectrograph)1d%(arm)s.fits"
        python:      "lsst.afw.image.MaskedImageF"
        persistable: "MaskedImageF"
        storage:     "FitsStorage"
        level:       "Ccd"
        tables:      "arc"
        columns:     "ccd"
        columns:     "taiObs"
        reference:   "raw_visit"
        refCols:     "visit"
        validRange:  true
        validStartName: validStart
        validEndName: validEnd
    }
}

datasets: {
    log: {
        template:      "%(visit)s/logs/run.log"
        python:        "str"
        persistable:   "None"
        storage:       "TextStorage"
    }
    logDir: {
        template:      "%(visit)s/logs"
        python:        "str"
        persistable:   "None"
        storage:       "None"
    }

    eups_versions: {
        template:      "config/eups.versions"
        python:        "lsst.daf.persistence.EupsVersions"
        persistable:   "ignored"
        storage:       "EupsStorage"
    }

    processCcd_config: {
        template:      "config/processCcd.py"
        python:        "lsst.pipe.tasks.processCcd.ProcessCcdConfig"
        persistable:      "Config"
        storage:    "ConfigStorage"
        tables:        raw
        tables:        raw_visit
    }
    processCcd_metadata: {
        template:      "processCcd_metadata/%(visit)07d-%(filter)s%(spectrograph)1d.boost"
        python:        "lsst.daf.base.PropertySet"
        persistable:        "PropertySet"
        storage:    "BoostStorage"
        tables:        raw
        tables:        raw_visit
    }

    bias_config: {
        template:      "config/bias.py"
        python:        "lsst.pipe.drivers.constructCalibs.BiasConfig"
        persistable:      "Config"
        storage:    "ConfigStorage"
        tables:        raw
        tables:        raw_visit
    }
    dark_config: {
        template:      "config/dark.py"
        python:        "lsst.pipe.drivers.constructCalibs.DarkConfig"
        persistable:   "Config"
        storage:       "ConfigStorage"
        tables:        raw
        tables:        raw_visit
    }
    reduceArcTask_config: {
        template:      "config/arc.py"
        python:        "pfs.drp.stella.reduceArcTask.ReduceArcConfig"
        persistable:   "Config"
        storage:       "ConfigStorage"
        tables:        raw
        tables:        raw_visit
    }
    reduceArcRefSpecTask_config: {
        template:      "config/arc.py"
        python:        "pfs.drp.stella.reduceArcRefSpecTask.ReduceArcRefSpecConfig"
        persistable:   "Config"
        storage:       "ConfigStorage"
        tables:        raw
        tables:        raw_visit
    }
    flat_config: {
        template:      "config/flat.py"
        python:        "lsst.pipe.drivers.constructCalibs.FlatConfig"
        persistable:   "Config"
        storage:       "ConfigStorage"
        tables:        raw
        tables:        raw_visit
    }
    createRefSpecTask_config: {
        template:      "config/flat.py"
        python:        "pfs.drp.stella.createRefSpec.CreateRefSpecConfig"
        persistable:   "Config"
        storage:       "ConfigStorage"
        tables:        raw
        tables:        raw_visit
    }
    createDetGeomTask_config: {
        template:      "config/flat.py"
        python:        "pfs.drp.stella.createDetGeom.CreateDetGeomConfig"
        persistable:   "Config"
        storage:       "ConfigStorage"
        tables:        raw
        tables:        raw_visit
    }

    ossThumb: {
        template:    "thumbs/oss-%(visit)07d-%(filter)s%(spectrograph)1d.png"
        python:      __builtin__.str
        persistable: None
        storage:     TextStorage
        tables:      raw
    }
    flattenedThumb: {
        template:    "thumbs/flattened-%(visit)07d-%(filter)s%(spectrograph)1d.png"
        python:      __builtin__.str
        persistable: None
        storage:     TextStorage
        tables:      raw
    }

}
