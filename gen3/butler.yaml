datastore:
  root: <butlerRoot>
  formatters:
    # Override the default Exposure formatter
    DecoratedImageU: lsst.obs.pfs.formatters.PfsFitsExposureFormatter
    Exposure: lsst.obs.pfs.formatters.PfsFitsExposureFormatter
    ExposureF: lsst.obs.pfs.formatters.PfsFitsExposureFormatter
    ExposureI: lsst.obs.pfs.formatters.PfsFitsExposureFormatter

    # PFS-specific dataset types
    PfsRaw: lsst.obs.pfs.formatters.PfsRawFormatter
    PfsConfig: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    FiberProfileSet: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    FiberTraceSet: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    PfsFiberNorms: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    DetectorMap: lsst.obs.pfs.formatters.DetectorMapFormatter
    PfsArm: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    PfsMerged: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    PfsFluxReference: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    PfsSingle: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    PfsObject: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    PfsCalibratedSpectra: lsst.obs.pfs.formatters.PfsCalibratedSpectraFormatter  # deprecated
    PfsObjectSpectra: lsst.obs.pfs.formatters.PfsObjectSpectraFormatter  # deprecated
    PfsCalibrated: lsst.obs.pfs.formatters.PfsCalibratedFormatter
    PfsCoadd: lsst.obs.pfs.formatters.PfsCoaddFormatter
    PfsCoZCandidates: lsst.obs.pfs.formatters.PfsCoZCandidatesFormatter
    SkyModel: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    FocalPlaneFunction: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    ArcLineSet: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    LsfDict: lsst.daf.butler.formatters.pickle.PickleFormatter
    Lsf: lsst.daf.butler.formatters.pickle.PickleFormatter
    NevenPsf: lsst.daf.butler.formatters.pickle.PickleFormatter
    MultipagePdfFigure: pfs.drp.qa.formatters.PdfMatplotlibFormatter
    QaDict: lsst.daf.butler.formatters.pickle.PickleFormatter
    ImageCube: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    ObjectGroupMap: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
    NirLinearity: lsst.obs.base.formatters.fitsGeneric.FitsGenericFormatter
  templates:
    default: "{run:/}/{datasetType}.{component:?}/{visit.day_obs:?}/{visit:?}/{datasetType}_{component:?}_{instrument:?}_{visit:?}_{arm:?}{spectrograph:?}_{detector:?}_{run}"
    instrument+detector: "{run:/}/{datasetType}.{component:?}/{datasetType}_{component:?}_{instrument:?}_{detector:?}_{run}"  # used for defects
    instrument+arm+spectrograph+dither: "{run:/}/{datasetType}.{component:?}/{datasetType}_{component:?}_{instrument:?}_{arm:?}{spectrograph:?}_{dither:?}_{run}"
    instrument+arm+spectrograph+pfs_design_id: "{run:/}/{datasetType}.{component:?}/{datasetType}_{component:?}_{instrument:?}_{arm:?}{spectrograph:?}_{pfs_design_id:?}_{run}"
    instrument+visit+arm+spectrograph: "{run:/}/{datasetType}.{component:?}/{visit.day_obs:?}/{visit:?}/{datasetType}_{component:?}_{instrument:?}_{visit:?}_{arm:?}{spectrograph:?}_{run}"
    instrument+arm+spectrograph: "{run:/}/{datasetType}.{component:?}/{datasetType}_{component:?}_{instrument:?}_{arm:?}{spectrograph:?}_{run}"
    instrument+visit+arm: "{run:/}/{datasetType}.{component:?}/{visit.day_obs:?}/{visit:?}/{datasetType}_{component:?}_{instrument:?}_{visit:?}_{arm:?}_{run}"
    instrument+arm: "{run:/}/{datasetType}.{component:?}/{datasetType}_{component:?}_{instrument:?}_{arm:?}_{run}"
    instrument+combination+cat_id: "{run:/}/{datasetType}.{component:?}/{datasetType}_{component:?}_{instrument:?}_{combination:?}_{cat_id:?}_{run}"
    instrument+combination+cat_id+obj_group: "{run:/}/{datasetType}.{component:?}/{cat_id:?}/{datasetType}_{component:?}_{instrument:?}_{combination:?}_{cat_id:?}_{obj_group:?}_{run}"
    instrument+profiles_run+profiles_group: "{run:/}/{datasetType}.{component:?}/{datasetType}_{component:?}_{instrument:?}_{profiles_run:?}_{profiles_group:?}_{run}"
    instrument+profiles_run+arm+spectrograph: "{run:/}/{datasetType}.{component:?}/{datasetType}_{component:?}_{instrument:?}_{profiles_run:?}_{arm:?}{spectrograph:?}_{run}"
    instrument+profiles_run+profiles_group+arm+spectrograph: "{run:/}/{datasetType}.{component:?}/{datasetType}_{component:?}_{instrument:?}_{profiles_run:?}_{profiles_group:?}_{arm:?}{spectrograph:?}_{run}"
    instrument+profiles_run+profiles_group+visit+arm+spectrograph: "{run:/}/{datasetType}.{component:?}/{visit.day_obs:?}/{visit:?}/{datasetType}_{component:?}_{instrument:?}_{profiles_run:?}_{profiles_group:?}_{visit:?}_{arm:?}{spectrograph:?}_{run}"
    instrument+visit_group+arm+spectrograph: "{run:/}/{datasetType}.{component:?}/{visit_group.day_obs:?}/{visit_group:?}/{datasetType}_{component:?}_{instrument:?}_{visit_group:?}_{arm:?}{spectrograph:?}_{run}"
    instrument+combination: "{run:/}/{datasetType}.{component:?}/{combination:?}/{datasetType}_{component:?}_{instrument:?}_{combination:?}_{run}"

registry:
  db: sqlite:///<butlerRoot>/gen3.sqlite3
storageClasses:
  PfsConfig:
    pytype: pfs.drp.stella.datamodel.PfsConfig
  FiberProfileSet:
    pytype: pfs.drp.stella.FiberProfileSet
  FiberTraceSet:
    pytype: pfs.drp.stella.FiberTraceSet
  PfsFiberNorms:
    pytype: pfs.drp.stella.datamodel.PfsFiberNorms
  DetectorMap:
    pytype: pfs.drp.stella.DetectorMap
    derivedComponents:
      slitOffsets: NumpyArray  # Slit offsets
      bbox: Box2I  # Bounding box
  PfsArm:
    pytype: pfs.drp.stella.datamodel.PfsArm
  PfsMerged:
    pytype: pfs.drp.stella.datamodel.PfsMerged
  PfsFluxReference:
    pytype: pfs.datamodel.pfsFluxReference.PfsFluxReference
  PfsSingle:
    pytype: pfs.drp.stella.datamodel.PfsSingle
  PfsObject:
    pytype: pfs.drp.stella.datamodel.PfsObject
  PfsCalibratedSpectra:  # deprecated in favor of PfsCalibrated
    pytype: pfs.drp.stella.datamodel.pfsTargetSpectra.PfsCalibratedSpectra
    converters:
      pfs.datamodel.drp.PfsCalibrated: pfs.drp.stella.datamodel.pfsTargetSpectra.PfsCalibratedSpectra.fromPfsCalibrated
    parameters:
      - objId  # Object identifier
      - obj_id  # Object identifier
    derivedComponents:
      single: PfsSingle  # Single spectrum; requires objId/obj_id
  PfsObjectSpectra:  # deprecated in favor of PfsCoadd
    pytype: pfs.drp.stella.datamodel.pfsTargetSpectra.PfsObjectSpectra
    converters:
      pfs.datamodel.drp.PfsCoadd: pfs.drp.stella.datamodel.pfsTargetSpectra.PfsObjectSpectra.fromPfsCoadd
    parameters:
      - objId  # Object identifier
      - obj_id  # Object identifier
    derivedComponents:
      single: PfsObject  # Single spectrum; requires objId/obj_id
  PfsCalibrated:
    pytype: pfs.datamodel.drp.PfsCalibrated
    parameters:
      - objId  # Object identifier
      - obj_id  # Object identifier
    derivedComponents:
      single: PfsSingle  # Single spectrum; requires objId/obj_id
  PfsCoadd:
    pytype: pfs.datamodel.drp.PfsCoadd
    parameters:
      - objId  # Object identifier
      - obj_id  # Object identifier
    derivedComponents:
      single: PfsObject  # Single spectrum; requires objId/obj_id
  PfsCoZCandidates:
    pytype: pfs.datamodel.pfsCoZCandidates.PfsCoZCandidates
    parameters:
      - objId  # Object identifier
      - obj_id  # Object identifier
    derivedComponents:
      single: PfsZCandidates  # Single spectrum; requires objId/obj_id
  PfsZCandidates:
    pytype: pfs.datamodel.pfsZCandidates.PfsZCandidates
  SkyModel:
    pytype: pfs.drp.stella.sky2d.SkyModel
  FocalPlaneFunction:
    pytype: pfs.drp.stella.focalPlaneFunction.FocalPlaneFunction
  ArcLineSet:
    pytype: pfs.drp.stella.arcLine.ArcLineSet
  LsfDict:
    pytype: pfs.drp.stella.lsf.LsfDict
  Lsf:
    pytype: pfs.drp.stella.lsf.Lsf
  NevenPsf:
    pytype: pfs.drp.stella.NevenPsfContinued.NevenPsf
  MultipagePdfFigure:
    pytype: pfs.drp.qa.storageClasses.MultipagePdfFigure
  QaDict:
    pytype: pfs.drp.qa.storageClasses.QaDict
  PfsRaw:
    pytype: lsst.obs.pfs.raw.PfsRaw
    parameters:
      - bbox  # Bounding box to read (Box2I)
      - readNum  # Read number of NIR ramp (int)
    components:
      exposure: Exposure  # CCD image or NIR CDS image, as an Exposure (like for a "raw")
      image: Image  # CCD image or NIR CDS image
      ramp: Image  # NIR ramp read image; requires readNum
      numReads: int  # Number of NIR ramp reads
      metadata: PropertyList  # header
      visitInfo: VisitInfo  # parsed visit information
      detector: Detector
      id: int  # exposure ID
      bbox: Box2I  # bounding box
      dimensions: Extent2I  # size of image
      xy0: Point2I  # bounding box origin
  ImageCube:
    pytype: lsst.obs.pfs.imageCube.ImageCube
  ObjectGroupMap:
    pytype: pfs.datamodel.objectGroupMap.ObjectGroupMap
  NirLinearity:
    pytype: lsst.obs.pfs.nirLinearity.NirLinearity
