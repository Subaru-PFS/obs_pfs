# -*- python -*-

import glob
import os
import lsst.sconsUtils

obs_subaruDir = os.environ["OBS_SUBARU_DIR"]

# scons steals our environment away, so we have to reinstate it
env = lsst.sconsUtils.env.Clone()
for name in ("PYTHONPATH", "LD_LIBRARY_PATH",
             "DYLD_LIBRARY_PATH", "PATH"):
    if name in os.environ:
        env.AppendENVPath(name, os.environ[name])

# we may need an explicit library load path specified in the command
libpathstr = lsst.sconsUtils.utils.libraryLoaderEnvironment()

# We always run these commands with an explicit python rather than relying on the shebang
python = "{} python".format(libpathstr)

# Dependency required for running the python scripts
dep = os.path.join(obs_subaruDir, "python/lsst/obs/subaru/_subaruLib.so")

defectsDatList = glob.glob("defects/*/defects.dat")
for defectsDat in defectsDatList:
    command = "%s bin.src/genDefectFits.py PFS %s --force" % (python, os.path.join("pfs", defectsDat))
    env.AlwaysBuild(env.Command(defectsDat + "-fits", [defectsDat, dep], command))

command = "%s %s/bin.src/genDefectRegistry.py --root pfs/defects" % (python, obs_subaruDir)
registry = env.AlwaysBuild(env.Command("defects/defectRegistry.sqlite3",
                                       [d + "-fits" for d in defectsDatList] + [dep], command))
